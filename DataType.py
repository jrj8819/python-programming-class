number = 1+2j
print(number)

# 복소수의 실수 부분만 때어내기
"""
복소수를 저장한 변수이름.real
"""
print(number.real)

# 복소수의 허수 부분만 때어내기
"""
복소수를 저장한 변수이름.imag
"""
print(number.imag)

# 복소수의 켤레 복소수를 구하기
"""
복소수를 저장한 변수이름.conjugate()
"""
print(number.conjugate())

# 복소수의 절대값 구하기
"""
abs(복소수를 저장한 변수이름 or 복소수 값)
"""
print(abs(number))

# 나머지 구하는 연산자 %
"""
7 % 3 >> 나머지 1

참고) 나머지 연산을 실행하면 나머지는 나누는 값보다
항상 작다.

3으로 나누면 나머지의 값은 항상 0, 1, 2가 된다.
"""

string = "hello python"
string2 = "123"
string3 = 123

# 따옴표 혹은 쌍따옴표로 문자열 데이터를 만들 수 있다.
"""
참고) 숫자도 따옴표 혹은 쌍따옴표를 활용하면
숫자(Number)가 아니라 문자열 (String) 데이터로 인식한다.
"""

# 변수에 담긴 데이터 형태를 확인하는 명령어
"""
type(데이터 혹은 변수)
"""
print(type(string2))
print(type(string3))

# 문자열에 따옴표 혹은 쌍따옴표를 넣어서 저장
"""
1. 따옴표와 쌍따옴표를 같이 활용하여 문자열에 표현한다.
2. 백슬래시를 사용하여 따옴표와 쌍따옴표를 문자열에 표현한다.
    문자열로 저장할 따옴표 혹은 쌍따옴표 앞에 백슬러시를 입력
"""
string4 = '"동해물과 백두산이"'
print(string4)

string5 = "'동해물과 백두산이'"
print(string5)

string6 = "\"동해물과 백두산이\""
print(string6)

# 여러줄의 문자열 데이터를 저장하는 방법

"""
1. 이스케이프 문자를 활용한다.
이스케이프 문자(\n)는 문자열 안에서는 특수한 기능을 수행하기 위한
키워드 이다.

2. 여러줄의 문자열 데이터를 따옴표 혹은 쌍따옴표 3개로 묶어
개행을 입력할 수 있다. 개행은 줄 바꿈입니다.
"""

multi1 = "안녕하세요\t반갑습니다."
print(multi1)

multi2 = '''
안녕하세요
    감사해요~
    잘있어요~
'''

multi3 = """
Life is too short
you need python
"""

print(multi2)
print(multi3)

# Quiz) 이스케이프 문자를 활용하여 다음과 같이 출력합시다.

print("I can programming well\n\nDreams Come True")

quiz1 = "I can programming well\nDreams Come True"
print(quiz1)

# 문자열 더하기와 곱하기
"""
파이썬에서는 문자열을 더하기(이어 붙이기)와 곱하기
(횟수를 지정해 어이 붙이기)를 할 수 있다.
참고로 빼기, 나누기 없음, 숫자의 덧셈 곱셈과는 다른 연산

(연산하는 항이 숫자 혹은 문자에 따라 덧셈, 곱셈 기호가
다른 역할(기능)을 수행한다.)
"""

head = "오늘도 "
tail = "수고하셨습니다."
number = 10

"""
문자열 덧셈을 할때는 두 항(head, tail)이 모두
문자열 데이터 이여야 한다.

total = head + number >> TypeError 발생 (문자열 + 숫자)

문자열 곱셈을 할 때는 한 항은 문자열 데이터 다른 항은
숫자 데이터(양의 정수, 횟수)이어야 한다.

total = head * tail >> TypeError 발생 (문자열 + 문자열)

"""

total = head * number
print(total)

# Quiz) 한줄 씩 Korea를 30번 출력하시오.

print("Korea\n" * 30)


# 문자열 인덱스
"""
문자열 인덱스는 문자열 데이터에서
하나의 문자를 가르키는 주소 역할을 한다.

인덱스를 활용하려면(문자열에서 인덱스번호 글자를
추려 낼 수 있다)

문자열을 저장한 변수이름[인덱스 번호]

주의) 인덱스를 활용할 때 문자열의 인덱스 범위
(동해물과 백두산이, 0~8)에 맞는 숫자를 인덱스 번호로
입력해야 한다.
"""

korea = "동해물과 백두산이"
print(korea)
print(korea[1])

# 문자열의 길이를 구하는 명령어
"""
len(문자열 혹은 문자열 변수)

>> 문자열의 길이(글자의 수)를 구하는 명령어
>>>> 마지막 인덱스 = 글자의 수 - 1

>>>> 인덱스의 범위 = 0 ~ (글자수 - 1)

인덱스 번호에 -(마이너스)가 붙으면 문자열의
가장 오른쪽(맨 끝) 부터 인덱스 번호를 계산한다.

인덱스 번호에서 -0은 0과 동일하다.
"""

print(korea[-1])






















































































